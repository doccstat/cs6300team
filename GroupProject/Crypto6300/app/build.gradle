apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "edu.gatech.seclass.crypto6300"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Fixes build error hitting GC overhead limit
    dexOptions {
        javaMaxHeapSize "2560M"
    }
}

//
//dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
//}


def appcompat_version = "1.0.2"
def ktx_version = "1.0.1"
def constraint_layout_version = "1.1.3"
def nav_version = "1.0.0-beta01"
def timber_version = '4.7.0'
def butterknife_version = '10.1.0'
def ktlintVersion = '0.19.0'
def androidktxVersion = '0.2'
def guavaVersion = '18.0'

def legacySupportVersion = '1.0.0'

def junitTestVersion = '4.12'
def junitAndroidTestVersion = '1.1.0'
def espressoVersion = '3.1.1'
def core_testing_version = '2.0.0'
def mockito_version = '2.24.5'

dependencies {
    implementation(
            fileTree(dir: 'libs', include: ['*.jar']),
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            "androidx.appcompat:appcompat:$appcompat_version",
            "androidx.core:core-ktx:$ktx_version",
            "androidx.constraintlayout:constraintlayout:$constraint_layout_version",

            "android.arch.navigation:navigation-fragment:$nav_version", // use -ktx for Kotlin
            "android.arch.navigation:navigation-ui:$nav_version", // use -ktx for Kotlin

            // Timber
            "com.jakewharton.timber:timber:$timber_version",

            // Kotlin
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            "androidx.core:core-ktx:$androidktxVersion",

            // Guava
            "com.google.guava:guava:$guavaVersion",

            // Butterknife
            "com.jakewharton:butterknife:$butterknife_version",

            // Room components
            "android.arch.persistence.room:runtime:$rootProject.roomVersion",

            // Lifecycle components
            "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion",

            // Legacy Supporrt
            "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    )

    annotationProcessor(
            // Butterknife
            "com.jakewharton:butterknife-compiler:$butterknife_version",

            // Room components
            "android.arch.persistence.room:compiler:$rootProject.roomVersion",

            // Lifecycle components
            "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion",

    )

    kapt (
            "com.jakewharton:butterknife-compiler:$butterknife_version",
            "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    )

    testImplementation (
            "junit:junit:$junitTestVersion",
            "org.mockito:mockito-core:$mockito_version"
    )

    androidTestImplementation(
            "androidx.test:runner:$junitAndroidTestVersion",
            "androidx.test.ext:junit:$junitAndroidTestVersion",
            "androidx.test.espresso:espresso-core:$espressoVersion",
            "android.arch.persistence.room:testing:$rootProject.roomVersion",
            "androidx.arch.core:core-testing:$core_testing_version",
            "org.mockito:mockito-android:$mockito_version"
    )

}
